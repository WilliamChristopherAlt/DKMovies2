@model IEnumerable<DKMovies.Models.Movie>

@{
    ViewData["Title"] = "Browse Movies";
    var currentPage = ViewData["CurrentPage"] as int? ?? 1;
    var totalPages = ViewData["TotalPages"] as int? ?? 1;
    var hotMovies = ViewBag.HotMovies as List<DKMovies.Models.Movie> ?? new List<DKMovies.Models.Movie>();
    var recommendedMovies = ViewBag.RecommendedMovies as List<DKMovies.Models.Movie> ?? new List<DKMovies.Models.Movie>();
}

<style>
    body {
        background-color: #f8f9fa;
    }

    .movie-section {
        padding: 40px 20px;
    }

    .movie-title {
        font-size: 1rem;
        font-weight: 600;
        margin-top: 8px;
        color: #222;
    }

    .movie-meta {
        font-size: 0.8rem;
        color: #666;
    }

    .movie-link {
        text-decoration: none;
        color: inherit;
        display: block;
        height: 100%;
    }

    .card:hover {
        transform: scale(1.02);
        transition: transform 0.2s ease-in-out;
        z-index: 1;
    }

    .card-img-top {
        border-radius: 4px 4px 0 0;
    }

    .pagination .page-item.active .page-link {
        background-color: #0d6efd;
        border-color: #0d6efd;
        color: white;
    }

    .pagination .page-link {
        color: #0d6efd;
    }

    .movie-card {
        position: relative;
        overflow: hidden;
        transition: transform 0.3s ease;
        cursor: pointer;
    }

        .movie-card:hover {
            transform: scale(1.02);
        }

        .movie-card img {
            width: 100%;
            height: auto;
            display: block;
        }

    .movie-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.65);
        backdrop-filter: blur(2px);
        display: flex;
        flex-direction: column;
        justify-content: flex-start;
        align-items: center;
        opacity: 0;
        transition: opacity 0.3s ease;
        padding: 1.5rem 1rem;
        text-align: center;
    }

        .movie-overlay .movie-title {
            color: #fff;
            font-size: 1.2rem;
            font-weight: 700;
            text-shadow: 0 0 3px rgba(0, 0, 0, 0.7), 1px 1px 2px rgba(0, 0, 0, 0.5);
            margin-top: 1rem;
            font-family: 'Segoe UI', 'Helvetica Neue', sans-serif;
            text-align: center;
        }

    .movie-card:hover .movie-overlay {
        opacity: 1;
    }

    .movie-play-btn {
        font-size: 2rem;
        color: white;
        background-color: rgba(255, 0, 0, 0.85);
        padding: 0.5rem 1rem;
        border-radius: 50%;
        margin-top: 50px;
        margin-bottom: 1rem;
        z-index: 2;
        box-shadow: 0 0 8px rgba(255, 0, 0, 0.6);
    }

    .movie-buttons {
        z-index: 2;
    }

        .movie-buttons a {
            margin: 0.25rem;
        }

    .scroll-movie-row {
        display: flex !important;
        flex-wrap: nowrap !important;
        overflow-x: auto !important;
        overflow-y: hidden;
        scroll-behavior: smooth;
        gap: 1rem;
        padding: 1rem 2rem;
    }

        .scroll-movie-row::-webkit-scrollbar {
            height: 8px;
        }

        .scroll-movie-row > div {
            flex-shrink: 0 !important;
            width: 220px !important;
        }

    /* Recommended section styling */
    .recommended-section {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    }

    .recommended-title {
        color: #fff;
        text-shadow: 0 2px 4px rgba(0,0,0,0.3);
    }

    /* Carousel Navigation Buttons - FIXED */
    .carousel-nav-btn {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        z-index: 10;
        opacity: 0.8;
        border: none;
        border-radius: 50%;
        width: 50px;
        height: 50px;
        display: flex;
        align-items: center;
        justify-content: center;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
        transition: all 0.3s ease;
    }

        .carousel-nav-btn:hover {
            opacity: 1;
            transform: translateY(-50%) scale(1.1);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.4);
        }

    .carousel-nav-btn-left {
        left: 10px;
    }

    .carousel-nav-btn-right {
        right: 10px;
    }

    /* Hot movies section - dark buttons */
    .hot-movies-nav {
        background-color: rgba(0, 0, 0, 0.7);
        color: white;
    }

        .hot-movies-nav:hover {
            background-color: rgba(0, 0, 0, 0.9);
            color: white;
        }

    /* Recommended movies section - light buttons */
    .recommended-nav {
        background-color: rgba(255, 255, 255, 0.9);
        color: #333;
    }

        .recommended-nav:hover {
            background-color: rgba(255, 255, 255, 1);
            color: #000;
        }
</style>

@* Hot Movies Section *@
@if (hotMovies.Any())
{
    <section class="bg-dark py-5">
        <div class="container">
            <h2 class="text-white fw-bold text-center mb-4">🔥 Top Trending Movies</h2>
            <div class="position-relative">
                <button class="btn carousel-nav-btn carousel-nav-btn-left hot-movies-nav scroll-left-hot">
                    <i class="bi bi-chevron-left fs-4"></i>
                </button>

                <div class="scroll-movie-row d-flex gap-3 overflow-auto pb-2 px-5" id="hot-movies-scroll" style="scrollbar-width: thin;">
                    @foreach (var movie in hotMovies)
                    {
                        <div class="flex-shrink-0" style="width: 220px;">
                            <div class="movie-card position-relative">
                                <img src="@Url.Content("~/images/movie_posters/" + movie.PosterImagePath)"
                                     onerror="this.onerror=null;this.src='/images/default-poster.jpg';"
                                     alt="@movie.Title"
                                     style="width: 100%; height: 320px; object-fit: cover;" />

                                <div class="movie-overlay">
                                    <a href="#" class="movie-play-btn" data-bs-toggle="modal" data-bs-target="#trailerModal_hot_@movie.ID">
                                        <i class="bi bi-play-fill"></i>
                                    </a>

                                    <div class="movie-title">@movie.Title</div>

                                    <div class="movie-buttons d-flex flex-wrap justify-content-center">
                                        <a href="@Url.Action("Details", "MoviesList", new { id = movie.ID })" class="btn btn-danger btn-sm">Details</a>
                                        <a href="@Url.Action("OrderTicket", "Tickets", new { id = movie.ID })" class="btn btn-danger btn-sm">Buy Ticket</a>
                                    </div>
                                </div>
                            </div>

                            <div class="modal fade" id="trailerModal_hot_@movie.ID" tabindex="-1" aria-hidden="true">
                                <div class="modal-dialog modal-lg modal-dialog-centered">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title">🎬 Trailer - @movie.Title</h5>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                        </div>
                                        <div class="modal-body">
                                            @if (!string.IsNullOrEmpty(movie.TrailerUrl))
                                            {
                                                <div class="ratio ratio-16x9">
                                                    <iframe src="@movie.TrailerUrl.Replace("watch?v=", "embed/")"
                                                            frameborder="0"
                                                            allow="autoplay; encrypted-media"
                                                            allowfullscreen></iframe>
                                                </div>
                                            }
                                            else
                                            {
                                                <p class="text-muted">Trailer not available.</p>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <button class="btn carousel-nav-btn carousel-nav-btn-right hot-movies-nav scroll-right-hot">
                    <i class="bi bi-chevron-right fs-4"></i>
                </button>
            </div>
        </div>
    </section>
}

@* Recommended Movies Section *@
@if (recommendedMovies.Any())
{
    <section class="bg-dark py-5 mt-4">
        <div class="container">
            @if (User.Identity.IsAuthenticated && User.IsInRole("User"))
            {
                <h2 class="text-white fw-bold text-center mb-4">✨ Recommended For You</h2>
            }
            else
            {
                <h2 class="text-white fw-bold text-center mb-4">🎬 Latest Movies</h2>
            }

            <div class="position-relative">
                <button class="btn carousel-nav-btn carousel-nav-btn-left hot-movies-nav scroll-left-rec">
                    <i class="bi bi-chevron-left fs-4"></i>
                </button>

                <div class="scroll-movie-row d-flex gap-3 overflow-auto pb-2 px-5" id="recommended-movies-scroll" style="scrollbar-width: thin;">
                    @foreach (var movie in recommendedMovies)
                    {
                        <div class="flex-shrink-0" style="width: 220px;">
                            <div class="movie-card position-relative">
                                <img src="@Url.Content("~/images/movie_posters/" + movie.PosterImagePath)"
                                     onerror="this.onerror=null;this.src='/images/default-poster.jpg';"
                                     alt="@movie.Title"
                                     style="width: 100%; height: 320px; object-fit: cover;" />

                                <div class="movie-overlay">
                                    <a href="#" class="movie-play-btn" data-bs-toggle="modal" data-bs-target="#trailerModal_rec_@movie.ID">
                                        <i class="bi bi-play-fill"></i>
                                    </a>

                                    <div class="movie-title">@movie.Title</div>

                                    <div class="movie-buttons d-flex flex-wrap justify-content-center">
                                        <a href="@Url.Action("Details", "MoviesList", new { id = movie.ID })" class="btn btn-danger btn-sm">Details</a>
                                        <a href="@Url.Action("OrderTicket", "Tickets", new { id = movie.ID })" class="btn btn-danger btn-sm">Buy Ticket</a>
                                    </div>
                                </div>
                            </div>

                            <div class="modal fade" id="trailerModal_rec_@movie.ID" tabindex="-1" aria-hidden="true">
                                <div class="modal-dialog modal-lg modal-dialog-centered">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title">🎬 Trailer - @movie.Title</h5>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                        </div>
                                        <div class="modal-body">
                                            @if (!string.IsNullOrEmpty(movie.TrailerUrl))
                                            {
                                                <div class="ratio ratio-16x9">
                                                    <iframe src="@movie.TrailerUrl.Replace("watch?v=", "embed/")"
                                                            frameborder="0"
                                                            allow="autoplay; encrypted-media"
                                                            allowfullscreen></iframe>
                                                </div>
                                            }
                                            else
                                            {
                                                <p class="text-muted">Trailer not available.</p>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <button class="btn carousel-nav-btn carousel-nav-btn-right hot-movies-nav scroll-right-rec">
                    <i class="bi bi-chevron-right fs-4"></i>
                </button>
            </div>
        </div>
    </section>
}

@* All Movies Grid Section *@
<div class="movie-section container mt-5">
    <h1 class="mb-4 text-center">Browse All Movies</h1>

    @if (!Model.Any())
    {
        <div class="alert alert-info text-center">
            <strong>No movies found.</strong> Please try adjusting your search or filters.
        </div>
    }

    <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 row-cols-xl-5 g-4">
        @foreach (var movie in Model)
        {
            var imagePath = string.IsNullOrWhiteSpace(movie.PosterImagePath)
            ? Url.Content("~/images/movie_posters/default.jpg")
            : Url.Content($"~/images/movie_posters/{movie.PosterImagePath}");

            <div class="col">
                <a asp-controller="MoviesList" asp-action="Details" asp-route-id="@movie.ID" class="movie-link">
                    <div class="card h-100 border-0 shadow-sm">
                        <div class="ratio ratio-2x3" style="aspect-ratio: 2 / 3;">
                            <img src="@imagePath" class="card-img-top" alt="@movie.Title" style="object-fit: cover; width: 100%; height: 100%;">
                        </div>
                        @{
                            var avgDict = ViewData["AverageRatings"] as Dictionary<int, double>;
                            var avg = avgDict != null && avgDict.ContainsKey(movie.ID) ? avgDict[movie.ID] : (double?)null;
                        }

                        <div class="card-body text-center">
                            <h5 class="movie-title">@movie.Title</h5>
                            <p class="movie-meta">@movie.Language?.Name | @movie.Country?.Name</p>
                            <p class="movie-meta">
                                <span class="text-warning">⭐</span>
                                @if (avg.HasValue)
                                {
                                    @($"{avg.Value:F1}")
                                }
                                else
                                {
                                    <text>No reviews</text>
                                }
                                | Rated: @movie.Rating?.Value | @movie.DurationMinutes mins
                            </p>
                        </div>
                    </div>
                </a>
            </div>
        }
    </div>

    @* Pagination *@
    <div class="mt-4 text-center">
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">
                @if (currentPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" asp-controller="MoviesList" asp-action="Index" asp-route-page="@(currentPage - 1)">Previous</a>
                    </li>
                }

                @for (int i = 1; i <= totalPages; i++)
                {
                    <li class="page-item @(i == currentPage ? "active" : "")">
                        <a class="page-link" asp-controller="MoviesList" asp-action="Index" asp-route-page="@i">@i</a>
                    </li>
                }

                @if (currentPage < totalPages)
                {
                    <li class="page-item">
                        <a class="page-link" asp-controller="MoviesList" asp-action="Index" asp-route-page="@(currentPage + 1)">Next</a>
                    </li>
                }
            </ul>
        </nav>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const scrollAmount = 250;

            // Hot Movies Scroll
            const hotScrollContainer = document.getElementById('hot-movies-scroll');
            const hotBtnLeft = document.querySelector('.scroll-left-hot');
            const hotBtnRight = document.querySelector('.scroll-right-hot');

            hotBtnLeft?.addEventListener("click", () => {
                hotScrollContainer.scrollBy({ left: -scrollAmount, behavior: "smooth" });
            });

            hotBtnRight?.addEventListener("click", () => {
                hotScrollContainer.scrollBy({ left: scrollAmount, behavior: "smooth" });
            });

            // Recommended Movies Scroll
            const recScrollContainer = document.getElementById('recommended-movies-scroll');
            const recBtnLeft = document.querySelector('.scroll-left-rec');
            const recBtnRight = document.querySelector('.scroll-right-rec');

            recBtnLeft?.addEventListener("click", () => {
                recScrollContainer.scrollBy({ left: -scrollAmount, behavior: "smooth" });
            });

            recBtnRight?.addEventListener("click", () => {
                recScrollContainer.scrollBy({ left: scrollAmount, behavior: "smooth" });
            });

            // Stop trailer when modal is closed
            document.querySelectorAll('.modal').forEach(function (modal) {
                modal.addEventListener('hidden.bs.modal', function () {
                    const iframe = modal.querySelector('iframe');
                    if (iframe) {
                        const src = iframe.src;
                        iframe.src = src; // reset video
                    }
                });
            });
        });
    </script>
}