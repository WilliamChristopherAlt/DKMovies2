@model DKMovies.Models.Movie
@{
    ViewData["Title"] = "Movie Details";

    // Wallpaper and Poster paths
    var wallpaperPath = string.IsNullOrWhiteSpace(Model.WallpaperImagePath)
        ? Url.Content("~/images/movie_wallpapers/default.jpg")
        : Url.Content($"~/images/movie_wallpapers/{Model.WallpaperImagePath}");

    var posterPath = string.IsNullOrWhiteSpace(Model.PosterImagePath)
        ? Url.Content("~/images/movie_posters/default.jpg")
        : Url.Content($"~/images/movie_posters/{Model.PosterImagePath}");

    var averageRating = ViewData["AverageRating"] as double? ?? 0;

    var isInWatchlist = ViewData["IsInWatchlist"] as bool? ?? false;

    var hasUserReviewed = ViewData["HasUserReviewed"] as bool? ?? false;

    var isAuthenticated = User.Identity?.IsAuthenticated ?? false;
    var userId = User.FindFirst(ClaimTypes.NameIdentifier)?.Value;

    var similarMovies = ViewData["SimilarMovies"] as List<DKMovies.Models.Movie>;
}

<!-- Load Bootstrap Icons -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" />

<style>
    .movie-background {
        background-image: url('@wallpaperPath');
        background-size: cover;
        background-position: center;
        position: relative;
        color: white;
    }

        .movie-background::before {
            content: "";
            position: absolute;
            inset: 0;
            background: rgba(0, 0, 0, 0.45); /* dark overlay */
            z-index: 0;
        }

    .movie-content {
        position: relative;
        z-index: 1;
        padding-top: 3rem;
        padding-bottom: 3rem;
    }

    .movie-info-section {
        background: rgba(0, 0, 0, 0.75);
        padding: 2rem;
        border-radius: 10px;
        margin-top: 1rem;
    }

    .reviews-section {
        background: #f8f9fa;
        padding: 2rem;
        margin-top: 2rem;
        border-left: 4px solid #007bff;
    }

    .review-item {
        background: white;
        padding: 1.5rem;
        margin-bottom: 1rem;
        border: 1px solid #dee2e6;
    }

        .review-item:last-child {
            margin-bottom: 0;
        }
</style>

@using System.Security.Claims
@{
    var role = User.FindFirst(ClaimTypes.Role)?.Value;
}

<div class="movie-background">
    <div class="container movie-content">
        <div class="row align-items-start">
            <!-- Left: Poster -->
            <div class="col-md-3 mb-4">
                <div class="shadow rounded overflow-hidden position-relative" style="padding-bottom: 150%;">
                    <img src="@posterPath" alt="@Model.Title" class="position-absolute w-100 h-100" style="object-fit: cover;">
                </div>
            </div>

            <!-- Center: Info -->
            <div class="col-md-6">
                <h2 class="mb-3">@Model.Title</h2>
                <p class="text-light">@Model.Description</p>

                <div class="mb-2"><strong>Duration:</strong> @Model.DurationMinutes minutes</div>
                <div class="mb-2"><strong>Rating:</strong> @Model.Rating?.Value</div>
                <div class="mb-2"><strong>Release Date:</strong> @(Model.ReleaseDate?.ToString("d") ?? "N/A")</div>
                <div class="mb-2"><strong>Language:</strong> @Model.Language?.Name</div>
                <div class="mb-2"><strong>Country:</strong> @Model.Country?.Name</div>
                <div class="mb-2">
                    <strong>Director:</strong>
                    @if (Model.Director != null)
                    {
                        <a asp-controller="DirectorsList" asp-action="Details" asp-route-id="@Model.Director.ID" class="text-light text-decoration-underline">
                            @Model.Director.FullName
                        </a>
                    }
                    else
                    {
                        <span>N/A</span>
                    }
                </div>

                <div class="mb-2">
                    <strong>Genres:</strong>
                    @foreach (var genre in Model.MovieGenres.Select(mg => mg.Genre.Name))
                    {
                        <span class="badge bg-light text-dark me-1">@genre</span>
                    }
                </div>

                <!-- Average Rating -->
                <div class="mb-3">
                    <strong>Average Rating:</strong>
                    <div class="d-flex align-items-center">
                        <div class="me-2">
                            @{
                                int fullStars = (int)Math.Floor(averageRating);
                                bool hasHalfStar = (averageRating - fullStars) >= 0.25 && (averageRating - fullStars) < 0.75;
                                int emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);
                            }

                            @for (int i = 0; i < fullStars; i++)
                            {
                                <i class="bi bi-star-fill text-warning"></i>
                            }
                            @if (hasHalfStar)
                            {
                                <i class="bi bi-star-half text-warning"></i>
                            }
                            @for (int i = 0; i < emptyStars; i++)
                            {
                                <i class="bi bi-star text-warning"></i>
                            }
                        </div>
                        <span>@averageRating.ToString("F1") / 5</span>
                    </div>
                </div>
            </div>

            <!-- Right: Actions -->
            <div class="col-md-3 d-flex flex-column justify-content-center align-items-start">
                <a asp-action="Index" class="btn btn-link text-light mb-2 text-decoration-none">
                    <i class="bi bi-arrow-left me-1"></i> Back
                </a>

                @if (role == "Admin")
                {
                    <a asp-action="Edit" asp-route-id="@Model.ID" class="btn btn-link text-light mb-2 text-decoration-none">
                        <i class="bi bi-pencil me-1"></i> Edit
                    </a>
                }
                else if (role == "User")
                {
                    @if (isInWatchlist)
                    {
                        <button class="btn btn-warning text-dark mb-2 text-decoration-none" disabled>
                            <i class="bi bi-bookmark-check-fill me-1"></i> In Watchlist
                        </button>
                    }
                    else
                    {
                        <form asp-controller="Watchlist" asp-action="Create" method="post" class="mb-2">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="movieId" value="@Model.ID" />
                            <button type="submit" class="btn btn-link text-light text-decoration-none">
                                <i class="bi bi-bookmark me-1"></i> Add to Watchlist
                            </button>
                        </form>
                    }

                    @* <button class="btn btn-link text-light mb-2 text-decoration-none"> *@
                    @*     <i class="bi bi-star me-1"></i> Rate *@
                    @* </button> *@

                    <a href="@Url.Action("OrderTicket", "Tickets", new { id = Model.ID })" class="btn btn-link text-light text-decoration-none">
                        <i class="bi bi-ticket-perforated me-1"></i> Order Ticket
                    </a>

                }
                else
                {
                    <button class="btn btn-link text-secondary text-decoration-none" disabled>
                        <i class="bi bi-ticket-perforated me-1"></i> Order Ticket
                    </button>
                    <small class="text-danger d-block ms-1">Please log in as a user to order tickets.</small>
                }
            </div>
        </div>
    </div>
</div>

@if (similarMovies != null && similarMovies.Any())
{
    <div class="container mt-5">
        <h3 class="text-dark mb-4">Similar Movies</h3>

        @if (similarMovies.Count == 1)
        {
            <!-- Single movie display -->
            var movie = similarMovies.First();
            var posterPath_ = string.IsNullOrWhiteSpace(movie.PosterImagePath)
            ? Url.Content("~/images/movie_posters/default.jpg")
            : Url.Content($"~/images/movie_posters/{movie.PosterImagePath}");

            <div class="d-flex justify-content-center">
                <div class="card" style="width: 300px;">
                    <a asp-controller="MoviesList" asp-action="Details" asp-route-id="@movie.ID" class="text-decoration-none">
                        <img src="@posterPath_" class="card-img-top" alt="@movie.Title" style="height: 400px; object-fit: cover;">
                        <div class="card-body text-center">
                            <h6 class="card-title text-dark">@movie.Title</h6>
                            <small class="text-muted">@(movie.ReleaseDate?.Year.ToString() ?? "N/A")</small>
                        </div>
                    </a>
                </div>
            </div>
        }
        else
        {
            <!-- Multiple movies carousel -->
            <div id="similarMoviesCarousel" class="carousel slide" data-bs-ride="false">
                <div class="carousel-inner">
                    @{
                        int moviesPerSlide = 4; // Show 4 movies per slide
                        int totalSlides = (int)Math.Ceiling((double)similarMovies.Count / moviesPerSlide);
                    }

                    @for (int slideIndex = 0; slideIndex < totalSlides; slideIndex++)
                    {
                        var moviesInSlide = similarMovies.Skip(slideIndex * moviesPerSlide).Take(moviesPerSlide);

                        <div class="carousel-item @(slideIndex == 0 ? "active" : "")">
                            <div class="row justify-content-center">
                                @foreach (var movie in moviesInSlide)
                                {
                                    var posterPath_ = string.IsNullOrWhiteSpace(movie.PosterImagePath)
                                    ? Url.Content("~/images/movie_posters/default.jpg")
                                    : Url.Content($"~/images/movie_posters/{movie.PosterImagePath}");

                                    <div class="col-lg-3 col-md-4 col-sm-6 mb-3">
                                        <div class="card h-100 shadow-sm">
                                            <a asp-controller="MoviesList" asp-action="Details" asp-route-id="@movie.ID" class="text-decoration-none">
                                                <img src="@posterPath_" class="card-img-top" alt="@movie.Title" style="height: 300px; object-fit: cover;">
                                                <div class="card-body text-center">
                                                    <h6 class="card-title text-dark mb-1" style="font-size: 0.9rem;">@movie.Title</h6>
                                                    <small class="text-muted">@(movie.ReleaseDate?.Year.ToString() ?? "N/A")</small>
                                                </div>
                                            </a>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                </div>

                @if (totalSlides > 1)
                {
                    <!-- Carousel controls -->
                    <button class="carousel-control-prev" type="button" data-bs-target="#similarMoviesCarousel" data-bs-slide="prev" style="width: 5%;">
                        <span class="carousel-control-prev-icon bg-dark rounded-circle p-3" aria-hidden="true"></span>
                        <span class="visually-hidden">Previous</span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#similarMoviesCarousel" data-bs-slide="next" style="width: 5%;">
                        <span class="carousel-control-next-icon bg-dark rounded-circle p-3" aria-hidden="true"></span>
                        <span class="visually-hidden">Next</span>
                    </button>

                    <!-- Indicators -->
                    <div class="carousel-indicators" style="position: relative; margin-top: 20px;">
                        @for (int i = 0; i < totalSlides; i++)
                        {
                            <button type="button" data-bs-target="#similarMoviesCarousel" data-bs-slide-to="@i"
                                    class="@(i == 0 ? "active" : "")" aria-current="@(i == 0 ? "true" : "")"
                                    aria-label="Slide @(i + 1)" style="background-color: #6c757d;"></button>
                        }
                    </div>
                }
            </div>
        }
    </div>
}
else
{
    <!-- No similar movies found -->
    <div class="container mt-5">
        <h3 class="text-dark mb-4">Similar Movies</h3>
        <div class="alert alert-info">
            <i class="bi bi-info-circle"></i> No similar movies found at the moment.
        </div>
    </div>
}

<!-- Reviews Section -->
<div class="container">
    <div class="reviews-section">
        @if (isAuthenticated && role == "User" && !string.IsNullOrEmpty(userId))
        {
            if (!hasUserReviewed)
            {
                <h5 class="text-dark mb-4">Leave a Review</h5>
                <form asp-controller="Reviews" asp-action="LeaveReview" method="post" id="reviewForm" class="mb-4">
                    <input type="hidden" name="MovieID" value="@Model.ID" />
                    <input type="hidden" name="UserID" value="@userId" />
                    <input type="hidden" name="Rating" id="selectedRating" value="0" />

                    <div class="mb-3">
                        <label class="form-label d-block">Your Rating</label>
                        <div id="starRating" class="text-warning fs-4">
                            @for (int i = 1; i <= 5; i++)
                            {
                                <i class="bi bi-star" data-value="@i" style="cursor:pointer;"></i>
                            }
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="Comment" class="form-label">Comment</label>
                        <textarea name="Comment" class="form-control" rows="3" required></textarea>
                    </div>

                    <button type="submit" class="btn btn-primary">Submit Review</button>
                </form>
                <hr class="mb-4">
            }
            else
            {
                <div class="alert alert-info mb-4">
                    <i class="bi bi-info-circle"></i> You have already reviewed this movie.
                </div>
            }
        }

        <h3 class="text-dark mb-4">Reviews</h3>

        @if (Model.Reviews != null && Model.Reviews.Any())
        {
            <div id="reviewsContainer">
                @{
                    var reviewsList = Model.Reviews.ToList();
                    var initialReviews = reviewsList.Take(8);
                }

                @foreach (var review in initialReviews)
                {
                    <div class="review-item" data-review-index="@reviewsList.IndexOf(review)">
                        <div class="d-flex justify-content-between mb-2">
                            <!-- User Info -->
                            <div class="d-flex align-items-center">
                                @if (!string.IsNullOrWhiteSpace(review.User?.ProfileImagePath))
                                {
                                    <img src="~/images/users/@review.User.ProfileImagePath"
                                         alt="@review.User.Username's Profile"
                                         class="rounded-circle me-2"
                                         style="width: 40px; height: 40px; object-fit: cover;" />
                                }
                                <span class="fw-bold">@review.User.Username</span>
                            </div>
                            <div class="text-muted small">
                                @review.CreatedAt.ToString("d")
                            </div>
                        </div>
                        <div class="d-flex align-items-start">
                            <div class="me-3">
                                @for (int i = 0; i < 5; i++)
                                {
                                    <i class="bi @(i < review.Rating ? "bi-star-fill" : "bi-star") text-warning"></i>
                                }
                            </div>
                            <p class="mb-0">@review.Comment</p>
                        </div>
                    </div>
                }

                <!-- Hidden reviews for load more functionality -->
                @foreach (var review in reviewsList.Skip(8))
                {
                    <div class="review-item d-none" data-review-index="@reviewsList.IndexOf(review)">
                        <div class="d-flex justify-content-between mb-2">
                            <!-- User Info -->
                            <div class="d-flex align-items-center">
                                @if (!string.IsNullOrWhiteSpace(review.User?.ProfileImagePath))
                                {
                                    <img src="~/images/users/@review.User.ProfileImagePath"
                                         alt="@review.User.Username's Profile"
                                         class="rounded-circle me-2"
                                         style="width: 40px; height: 40px; object-fit: cover;" />
                                }
                                <span class="fw-bold">@review.User.Username</span>
                            </div>
                            <div class="text-muted small">
                                @review.CreatedAt.ToString("d")
                            </div>
                        </div>
                        <div class="d-flex align-items-start">
                            <div class="me-3">
                                @for (int i = 0; i < 5; i++)
                                {
                                    <i class="bi @(i < review.Rating ? "bi-star-fill" : "bi-star") text-warning"></i>
                                }
                            </div>
                            <p class="mb-0">@review.Comment</p>
                        </div>
                    </div>
                }
            </div>

            @if (Model.Reviews.Count() > 8)
            {
                <div class="text-center mt-4">
                    <button id="loadMoreReviews" class="btn btn-outline-primary">
                        Load More Reviews
                    </button>
                </div>
            }
        }
        else
        {
            <p class="text-muted">No reviews available.</p>
        }
    </div>
</div>

@section Scripts {
    <script>
        const stars = document.querySelectorAll('#starRating .bi');
        const ratingInput = document.getElementById('selectedRating');

        stars.forEach(star => {
            star.addEventListener('mouseenter', () => {
                const val = parseInt(star.getAttribute('data-value'));
                highlightStars(val);
            });

            star.addEventListener('mouseleave', () => {
                highlightStars(parseInt(ratingInput.value));
            });

            star.addEventListener('click', () => {
                const val = parseInt(star.getAttribute('data-value'));
                ratingInput.value = val;
                highlightStars(val);
            });
        });

        function highlightStars(value) {
            stars.forEach(star => {
                const starValue = parseInt(star.getAttribute('data-value'));
                if (starValue <= value) {
                    star.classList.remove('bi-star');
                    star.classList.add('bi-star-fill');
                } else {
                    star.classList.remove('bi-star-fill');
                    star.classList.add('bi-star');
                }
            });
        }

        // Load more reviews functionality
        document.addEventListener('DOMContentLoaded', function() {
            const loadMoreBtn = document.getElementById('loadMoreReviews');
            let currentlyShown = 8;
            const reviewsPerLoad = 8;

            if (loadMoreBtn) {
                loadMoreBtn.addEventListener('click', function() {
                    const hiddenReviews = document.querySelectorAll('.review-item.d-none');
                    const reviewsToShow = Array.from(hiddenReviews).slice(0, reviewsPerLoad);

                    reviewsToShow.forEach(review => {
                        review.classList.remove('d-none');
                    });

                    currentlyShown += reviewsToShow.length;

                    // Hide button if no more reviews to show
                    if (hiddenReviews.length <= reviewsPerLoad) {
                        loadMoreBtn.style.display = 'none';
                    }
                });
            }
        });
    </script>
}