@using DKMovies.Models.ViewModels
@model EmployeeIndexViewModel
@{
    ViewData["Title"] = "Employee Management";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<!-- Header Section -->
<div class="row mb-4">
    <div class="col-12">
        <div class="card border-0 bg-gradient-primary text-white shadow-sm">
            <div class="card-body py-4">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h2 class="mb-1 fw-bold">
                            <i class="fas fa-user-tie me-2"></i>Employee Management
                        </h2>
                        <p class="mb-0 opacity-90">Manage theater employees</p>
                    </div>
                    <div class="d-flex gap-2">
                        <a asp-action="Create" class="btn btn-light btn-sm">
                            <i class="fas fa-plus me-1"></i>Add Employee
                        </a>
                        <button class="btn btn-light btn-sm" onclick="location.reload()">
                            <i class="fas fa-sync-alt me-1"></i>Refresh
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@if (!Model.Employees.Any())
{
    <!-- Empty State -->
    <div class="row">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-body text-center py-5">
                    <div class="mb-4">
                        <i class="fas fa-user-tie text-muted" style="font-size: 4rem; opacity: 0.3;"></i>
                    </div>
                    <h4 class="text-muted mb-3">No Employees Found</h4>
                    <p class="text-muted mb-4">
                        No employees match your search criteria. Try adjusting your filters or search term.
                    </p>
                    <div class="d-flex justify-content-center gap-2">
                        <a asp-action="Index" class="btn btn-outline-secondary">
                            <i class="fas fa-times me-2"></i>Clear Filters
                        </a>
                        <a asp-action="Create" class="btn btn-primary">
                            <i class="fas fa-plus me-2"></i>Add First Employee
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <!-- Filter and Search Section -->
    <div class="row mb-3">
        <div class="col-12">
            <form asp-action="Index" method="get" id="filterForm">
                <input type="hidden" name="page" value="1" id="pageInput" />
                <div class="d-flex justify-content-between align-items-center flex-wrap gap-3">
                    <h5 class="mb-0 text-dark">
                        <i class="fas fa-list me-2 text-primary"></i>
                        Employees
                        <span class="badge bg-primary ms-2">@Model.TotalEmployees</span>
                    </h5>
                    <div class="d-flex gap-2 flex-wrap">
                        <div class="dropdown">
                            <button class="btn btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                                <i class="fas fa-filter me-1"></i>
                                @(Model.FilterType == "all" ? "All Employees" :
                                    Model.FilterType == "recent" ? "Recent Hires (30 days)" :
                                    Model.FilterType == "senior" ? "Senior (2+ years)" : "Admin Employees")
                            </button>
                            <ul class="dropdown-menu">
                                <li>
                                    <a class="dropdown-item @(Model.FilterType == "all" ? "active" : "")"
                                       href="javascript:void(0)" onclick="setFilter('all')">All Employees</a>
                                </li>
                                <li>
                                    <a class="dropdown-item @(Model.FilterType == "recent" ? "active" : "")"
                                       href="javascript:void(0)" onclick="setFilter('recent')">Recent Hires (30 days)</a>
                                </li>
                                <li>
                                    <a class="dropdown-item @(Model.FilterType == "senior" ? "active" : "")"
                                       href="javascript:void(0)" onclick="setFilter('senior')">Senior (2+ years)</a>
                                </li>
                                <li>
                                    <a class="dropdown-item @(Model.FilterType == "admin" ? "active" : "")"
                                       href="javascript:void(0)" onclick="setFilter('admin')">Admin Employees</a>
                                </li>
                            </ul>
                        </div>
                        <div class="input-group" style="width: 250px;">
                            <input type="text" name="search" class="form-control"
                                   placeholder="Search employees..." value="@Model.SearchTerm" id="searchInput">
                            <button class="btn btn-outline-secondary" type="submit">
                                <i class="fas fa-search"></i>
                            </button>
                        </div>
                        <input type="hidden" name="filter" value="@Model.FilterType" id="filterInput" />
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Results Info -->
    <div class="row mb-3">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <small class="text-muted">
                    Showing @Model.StartItem-@Model.EndItem of @Model.TotalEmployees employees
                    @if (!string.IsNullOrWhiteSpace(Model.SearchTerm))
                    {
                        <span> for "@Model.SearchTerm"</span>
                    }
                </small>
                @if (!string.IsNullOrWhiteSpace(Model.SearchTerm) || Model.FilterType != "all")
                {
                    <a asp-action="Index" class="btn btn-sm btn-outline-secondary">
                        <i class="fas fa-times me-1"></i>Clear Filters
                    </a>
                }
            </div>
        </div>
    </div>

    <!-- Employees Grid -->
    <div class="row" id="employeesContainer">
        @foreach (var employee in Model.Employees)
        {
            <div class="col-lg-6 col-md-12 mb-4 employee-item">
                <div class="card border-0 shadow-sm employee-card h-100" onclick="goToDetails(@employee.ID)" style="cursor: pointer;">
                    <!-- Action Buttons -->
                    <div class="position-absolute action-buttons" style="top: 10px; right: 10px; z-index: 10;">
                        <button type="button" class="btn btn-danger rounded-circle btn-sm"
                                onclick="event.stopPropagation(); confirmDelete(@employee.ID, '@employee.FullName')"
                                data-bs-toggle="tooltip" title="Delete Employee">
                            <i class="fas fa-trash-alt"></i>
                        </button>
                    </div>

                    <div class="card-body p-3">
                        <div class="row g-3 align-items-start">
                            <!-- Employee Avatar -->
                            <div class="col-3">
                                <div class="avatar-container">
                                    @{
                                        var avatarPath = string.IsNullOrWhiteSpace(employee.ProfileImagePath)
                                        ? "default_person.png"
                                        : employee.ProfileImagePath.TrimStart('/');
                                        var fullAvatarPath = Url.Content($"~/images/employees/{avatarPath}");
                                    }
                                    <img src="@fullAvatarPath"
                                         class="img-fluid employee-avatar"
                                         onerror="this.onerror=null; this.src='@Url.Content("~/images/default_person.png")'" />
                                </div>
                            </div>

                            <!-- Personal Info -->
                            <div class="col-3 d-flex flex-column justify-content-center">
                                <h6 class="card-title mb-2 fw-bold text-dark">
                                    @employee.FullName
                                </h6>
                                <div class="employee-info text-muted">
                                    <div class="mb-1 d-flex">
                                        <i class="fas fa-briefcase me-1 flex-shrink-0"></i>
                                        <span class="text-break">@employee.Role?.Name</span>
                                    </div>
                                    <div class="mb-1 d-flex">
                                        <i class="fas fa-building me-1 flex-shrink-0"></i>
                                        <span class="text-break">@employee.Theater?.Name</span>
                                    </div>

                                    @if (!string.IsNullOrWhiteSpace(employee.Gender))
                                    {
                                        <div class="mb-1 d-flex">
                                            <i class="fas fa-venus-mars me-1 flex-shrink-0"></i>
                                            <span class="text-break">@employee.Gender</span>
                                        </div>
                                    }
                                    @if (employee.DateOfBirth.HasValue)
                                    {
                                        <div class="mb-1 d-flex">
                                            <i class="fas fa-birthday-cake me-1 flex-shrink-0"></i>
                                            <span class="text-break">@employee.DateOfBirth.Value.ToString("MMM dd, yyyy")</span>
                                        </div>
                                    }
                                </div>
                            </div>

                            <!-- Contact Details (Center) -->
                            <div class="col-3 d-flex flex-column justify-content-center">
                                <div class="employee-contact text-muted">
                                    @if (!string.IsNullOrWhiteSpace(employee.CitizenID))
                                    {
                                        <div class="mb-1 d-flex">
                                            <i class="fas fa-id-card me-1 flex-shrink-0"></i>
                                            <span class="text-break">@employee.CitizenID</span>
                                        </div>
                                    }
                                    @if (!string.IsNullOrWhiteSpace(employee.Email))
                                    {
                                        <div class="mb-1 d-flex">
                                            <i class="fas fa-envelope me-1 flex-shrink-0"></i>
                                            <span class="text-break">@employee.Email</span>
                                        </div>
                                    }
                                    @if (!string.IsNullOrWhiteSpace(employee.Phone))
                                    {
                                        <div class="mb-1 d-flex">
                                            <i class="fas fa-phone me-1 flex-shrink-0"></i>
                                            <span class="text-break">@employee.Phone</span>
                                        </div>
                                    }
                                </div>
                            </div>

                            <!-- Employment Tags -->
                            <div class="col-3">
                                <div class="employee-tags">
                                    @if (employee.Admins?.Any() == true)
                                    {
                                        <span class="badge bg-success">Admin</span>
                                    }
                                    @{
                                        var yearsOfService = (DateTime.Now - employee.HireDate).Days / 365.25;
                                    }
                                    @if (yearsOfService >= 2)
                                    {
                                        <span class="badge bg-info text-white">Senior</span>
                                    }
                                    else if ((DateTime.Now - employee.HireDate).Days <= 30)
                                    {
                                        <span class="badge bg-warning text-dark">New</span>
                                    }

                                    <span class="badge bg-light text-dark">
                                        <i class="fas fa-calendar-alt me-1"></i>
                                        @employee.HireDate.ToString("MMM yyyy")
                                    </span>

                                    @if (employee.Salary.HasValue)
                                    {
                                        <span class="badge bg-success">
                                            <i class="fas fa-dollar-sign me-1"></i>
                                            @employee.Salary.Value.ToString("N0")
                                        </span>
                                    }

                                    <span class="badge bg-secondary">
                                        <i class="fas fa-clock me-1"></i>
                                        @Math.Round(yearsOfService, 1)y
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Pagination -->
    @if (Model.TotalPages > 1)
    {
        <div class="row mb-4">
            <div class="col-12">
                <nav aria-label="Employee pagination">
                    <ul class="pagination justify-content-center mb-0">
                        <!-- First Page -->
                        @if (Model.CurrentPage > 3)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@GetPageUrl(1)">
                                    <i class="fas fa-angle-double-left"></i>
                                </a>
                            </li>
                        }

                        <!-- Previous Page -->
                        @if (Model.HasPreviousPage)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@GetPageUrl(Model.CurrentPage - 1)">
                                    <i class="fas fa-angle-left"></i>
                                </a>
                            </li>
                        }

                        <!-- Page Numbers -->
                        @{
                            var startPage = Math.Max(1, Model.CurrentPage - 2);
                            var endPage = Math.Min(Model.TotalPages, Model.CurrentPage + 2);
                        }

                        @for (int i = startPage; i <= endPage; i++)
                        {
                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                <a class="page-link" href="@GetPageUrl(i)">@i</a>
                            </li>
                        }

                        <!-- Next Page -->
                        @if (Model.HasNextPage)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@GetPageUrl(Model.CurrentPage + 1)">
                                    <i class="fas fa-angle-right"></i>
                                </a>
                            </li>
                        }

                        <!-- Last Page -->
                        @if (Model.CurrentPage < Model.TotalPages - 2)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@GetPageUrl(Model.TotalPages)">
                                    <i class="fas fa-angle-double-right"></i>
                                </a>
                            </li>
                        }
                    </ul>
                </nav>
            </div>
        </div>
    }

    <!-- Footer Actions -->
    <div class="row mt-4">
        <div class="col-12">
            <div class="card border-0 bg-light">
                <div class="card-body py-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <strong>Total: @Model.TotalEmployees employees</strong>
                            <span class="text-muted ms-2">registered</span>
                        </div>
                        <div>
                            <a asp-action="Create" class="btn btn-primary btn-sm">
                                <i class="fas fa-plus me-1"></i>Add New Employee
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h5 class="modal-title">
                    <i class="fas fa-exclamation-triangle text-danger me-2"></i>Confirm Deletion
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p class="mb-3">Are you sure you want to delete this employee?</p>
                <div class="alert alert-danger">
                    <strong id="employeeNameToDelete"></strong>
                </div>
                <p class="text-muted small mb-0">
                    <i class="fas fa-info-circle me-1"></i>
                    This action cannot be undone. All employee data and related records will be permanently deleted.
                </p>
            </div>
            <div class="modal-footer border-0">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form id="deleteForm" method="post" style="display: inline;">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">
                        <i class="fas fa-trash-alt me-1"></i>Delete Employee
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@{
    string GetPageUrl(int page)
    {
        var routeValues = new Dictionary<string, object>
                {
                    ["page"] = page
                };

        if (!string.IsNullOrWhiteSpace(Model.SearchTerm))
            routeValues["search"] = Model.SearchTerm;

        if (Model.FilterType != "all")
            routeValues["filter"] = Model.FilterType;

        return Url.Action("Index", routeValues);
    }
}

@section Scripts {
    <script>
        $(document).ready(function () {
            // Initialize tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });

            // Add hover effects
            $('.employee-card').hover(
                function() {
                    $(this).addClass('shadow-lg').css('transform', 'translateY(-2px)');
                    $(this).find('.action-buttons').addClass('show');
                },
                function() {
                    $(this).removeClass('shadow-lg').css('transform', 'none');
                    $(this).find('.action-buttons').removeClass('show');
                }
            );

            // Auto-submit search form on Enter
            $('#searchInput').on('keypress', function(e) {
                if (e.which === 13) {
                    $('#pageInput').val(1);
                    $('#filterForm').submit();
                }
            });
        });

        // Navigate to details
        function goToDetails(employeeId) {
            window.location.href = '/AdminEmployee/Details/' + employeeId;
        }

        // Delete confirmation function
        function confirmDelete(employeeId, employeeName) {
            document.getElementById('employeeNameToDelete').textContent = employeeName;
            document.getElementById('deleteForm').action = '/AdminEmployee/Delete/' + employeeId;
            new bootstrap.Modal(document.getElementById('deleteModal')).show();
        }

        // Filter function
        function setFilter(filterType) {
            $('#filterInput').val(filterType);
            $('#pageInput').val(1);
            $('#filterForm').submit();
        }
    </script>
}

<style>
    .bg-gradient-primary {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    }

    .employee-card {
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }

        .employee-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15) !important;
        }

    .avatar-container {
        position: relative;
        width: 100%;
        max-width: 120px;
    }

    .employee-avatar {
        width: 100%;
        height: 180px;
        object-fit: cover;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        transition: transform 0.3s ease;
    }

        .employee-avatar:hover {
            transform: scale(1.05);
        }

    .action-buttons {
        opacity: 0;
        transition: opacity 0.3s ease;
    }

        .employee-card:hover .action-buttons,
        .action-buttons.show {
            opacity: 1;
        }

    .badge {
        font-size: 0.75rem;
        font-weight: 500;
        padding: 0.25rem 0.5rem;
        white-space: nowrap;
        display: inline-block;
        margin: 0.1rem;
    }

    .card-title {
        color: #2c3e50;
    }

    .employee-info {
        font-size: 0.9rem;
        line-height: 1.4;
    }

    .employee-tags {
        display: flex;
        flex-wrap: wrap;
        gap: 0.2rem;
        align-items: flex-start;
    }

    .pagination .page-link {
        color: #667eea;
        border-color: #dee2e6;
        padding: 0.5rem 0.75rem;
    }

    .pagination .page-item.active .page-link {
        background-color: #667eea;
        border-color: #667eea;
    }

    .pagination .page-link:hover {
        color: #764ba2;
        background-color: #f8f9fa;
        border-color: #dee2e6;
    }

    @@media (max-width: 768px) {
        .avatar-container

    {
        max-width: 100px;
    }

    .employee-avatar {
        height: 150px;
    }

    .action-buttons {
        opacity: 1;
    }

        .action-buttons .btn {
            padding: 0.25rem 0.5rem;
            font-size: 0.875rem;
        }

    .employee-info {
        font-size: 0.85rem;
    }

    }

    @@media (max-width: 576px) {
        .d-flex.gap-2

    {
        flex-direction: column;
        gap: 0.5rem !important;
    }

    .input-group {
        width: 100% !important;
    }

    .avatar-container {
        max-width: 80px;
    }

    .employee-avatar {
        height: 120px;
    }

    }
</style>