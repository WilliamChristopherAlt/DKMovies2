@using DKMovies.Models.ViewModels
@model UserIndexViewModel
@{
    ViewData["Title"] = "User Management";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<!-- Header Section -->
<div class="row mb-4">
    <div class="col-12">
        <div class="card border-0 bg-gradient-primary text-white shadow-sm">
            <div class="card-body py-4">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h2 class="mb-1 fw-bold">
                            <i class="fas fa-users me-2"></i>User Management
                        </h2>
                        <p class="mb-0 opacity-90">Manage registered users</p>
                    </div>
                    <div class="d-flex gap-2">
                        <button class="btn btn-light btn-sm" onclick="location.reload()">
                            <i class="fas fa-sync-alt me-1"></i>Refresh
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@if (!Model.Users.Any())
{
    <!-- Empty State -->
    <div class="row">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-body text-center py-5">
                    <div class="mb-4">
                        <i class="fas fa-users text-muted" style="font-size: 4rem; opacity: 0.3;"></i>
                    </div>
                    <h4 class="text-muted mb-3">No Users Found</h4>
                    <p class="text-muted mb-4">
                        No users match your search criteria. Try adjusting your filters or search term.
                    </p>
                    <a asp-action="Index" class="btn btn-outline-secondary">
                        <i class="fas fa-times me-2"></i>Clear Filters
                    </a>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <!-- Filter and Search Section -->
    <div class="row mb-3">
        <div class="col-12">
            <form asp-action="Index" method="get" id="filterForm">
                <input type="hidden" name="page" value="1" id="pageInput" />
                <div class="d-flex justify-content-between align-items-center flex-wrap gap-3">
                    <h5 class="mb-0 text-dark">
                        <i class="fas fa-list me-2 text-primary"></i>
                        Registered Users
                        <span class="badge bg-primary ms-2">@Model.TotalUsers</span>
                    </h5>
                    <div class="d-flex gap-2 flex-wrap">
                        <div class="dropdown">
                            <button class="btn btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                                <i class="fas fa-filter me-1"></i>
                                @(Model.FilterType == "all" ? "All Users" :
                                    Model.FilterType == "verified" ? "Verified" :
                                    Model.FilterType == "unverified" ? "Unverified" : "2FA Enabled")
                            </button>
                            <ul class="dropdown-menu">
                                <li>
                                    <a class="dropdown-item @(Model.FilterType == "all" ? "active" : "")"
                                       href="javascript:void(0)" onclick="setFilter('all')">All Users</a>
                                </li>
                                <li>
                                    <a class="dropdown-item @(Model.FilterType == "verified" ? "active" : "")"
                                       href="javascript:void(0)" onclick="setFilter('verified')">Verified</a>
                                </li>
                                <li>
                                    <a class="dropdown-item @(Model.FilterType == "unverified" ? "active" : "")"
                                       href="javascript:void(0)" onclick="setFilter('unverified')">Unverified</a>
                                </li>
                                <li>
                                    <a class="dropdown-item @(Model.FilterType == "2fa" ? "active" : "")"
                                       href="javascript:void(0)" onclick="setFilter('2fa')">2FA Enabled</a>
                                </li>
                            </ul>
                        </div>
                        <div class="input-group" style="width: 250px;">
                            <input type="text" name="search" class="form-control"
                                   placeholder="Search users..." value="@Model.SearchTerm" id="searchInput">
                            <button class="btn btn-outline-secondary" type="submit">
                                <i class="fas fa-search"></i>
                            </button>
                        </div>
                        <input type="hidden" name="filter" value="@Model.FilterType" id="filterInput" />
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Results Info -->
    <div class="row mb-3">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <small class="text-muted">
                    Showing @Model.StartItem-@Model.EndItem of @Model.TotalUsers users
                    @if (!string.IsNullOrWhiteSpace(Model.SearchTerm))
                    {
                        <span> for "@Model.SearchTerm"</span>
                    }
                </small>
                @if (!string.IsNullOrWhiteSpace(Model.SearchTerm) || Model.FilterType != "all")
                {
                    <a asp-action="Index" class="btn btn-sm btn-outline-secondary">
                        <i class="fas fa-times me-1"></i>Clear Filters
                    </a>
                }
            </div>
        </div>
    </div>

    <!-- Users Grid -->
    <div class="row" id="usersContainer">
        @foreach (var user in Model.Users)
        {
            <div class="col-12 mb-4 user-item">
                <div class="card border-0 shadow-sm user-card h-100" onclick="goToDetails(@user.ID)" style="cursor: pointer;">
                    <!-- Delete Button -->
                    <button type="button" class="btn btn-danger btn-sm position-absolute delete-btn"
                            style="top: 10px; right: 10px; z-index: 10; border-radius: 50%; width: 35px; height: 35px; padding: 0;"
                            onclick="event.stopPropagation(); confirmDelete(@user.ID, '@user.Username')"
                            data-bs-toggle="tooltip" title="Delete User">
                        <i class="fas fa-trash-alt"></i>
                    </button>

                    <div class="card-body p-3">
                        <div class="row g-3">
                            <!-- User Avatar -->
                            <div class="col-md-2 col-sm-3">
                                <div class="avatar-container">
                                    @{
                                        var avatarPath = string.IsNullOrWhiteSpace(user.ProfileImagePath)
                                        ? "default-avatar.png"
                                        : user.ProfileImagePath.TrimStart('/');
                                        var fullAvatarPath = Url.Content($"~/images/users/{avatarPath}");
                                    }
                                    <img src="@fullAvatarPath"
                                         alt="@user.Username"
                                         class="img-fluid user-avatar"
                                         onerror="this.onerror=null; this.src='@Url.Content("~/images/default_person.png")'" />
                                </div>
                            </div>

                            <!-- User Details -->
                            <div class="col-md-10 col-sm-9">
                                <div class="d-flex justify-content-between align-items-start mb-2">
                                    <div>
                                        <h5 class="card-title mb-1 fw-bold text-dark">
                                            @(!string.IsNullOrWhiteSpace(user.FullName) ? user.FullName : user.Username)
                                        </h5>
                                        <p class="text-muted mb-0">@@@user.Username</p>
                                        <p class="text-muted mb-2">
                                            <i class="fas fa-envelope me-1"></i>@user.Email
                                        </p>
                                    </div>
                                    <div class="text-end">
                                        @if (user.EmailConfirmed)
                                        {
                                            <span class="badge bg-success px-2 py-1 mb-1">Verified</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-warning text-dark px-2 py-1 mb-1">Unverified</span>
                                        }
                                        @if (user.TwoFactorEnabled)
                                        {
                                            <br />
                                            <span class="badge bg-info text-white px-2 py-1">2FA</span>
                                        }
                                    </div>
                                </div>

                                <!-- User Info Row -->
                                <div class="row g-2 mb-3">
                                    @if (!string.IsNullOrWhiteSpace(user.Phone))
                                    {
                                        <div class="col-auto">
                                            <span class="badge bg-light text-dark">
                                                <i class="fas fa-phone me-1"></i>@user.Phone
                                            </span>
                                        </div>
                                    }
                                    @if (!string.IsNullOrWhiteSpace(user.Gender))
                                    {
                                        <div class="col-auto">
                                            <span class="badge bg-secondary">@user.Gender</span>
                                        </div>
                                    }
                                    @if (user.BirthDate.HasValue)
                                    {
                                        <div class="col-auto">
                                            <span class="badge bg-light text-dark">
                                                Age: @((DateTime.Now.Year - user.BirthDate.Value.Year))
                                            </span>
                                        </div>
                                    }
                                    <div class="col-auto">
                                        <span class="badge bg-info text-white">
                                            <i class="fas fa-calendar me-1"></i>@user.CreatedAt.ToString("MMM dd, yyyy")
                                        </span>
                                    </div>
                                </div>

                                <!-- Activity Stats -->
                                <div class="row g-2">
                                    <div class="col-auto">
                                        <small class="text-muted">
                                            <i class="fas fa-ticket-alt me-1"></i>
                                            @user.Tickets?.Count() tickets
                                        </small>
                                    </div>
                                    <div class="col-auto">
                                        <small class="text-muted">
                                            <i class="fas fa-star me-1"></i>
                                            @user.Reviews?.Count() reviews
                                        </small>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Pagination -->
    @if (Model.TotalPages > 1)
    {
        <div class="row mb-4">
            <div class="col-12">
                <nav aria-label="User pagination">
                    <ul class="pagination justify-content-center mb-0">
                        <!-- First Page -->
                        @if (Model.CurrentPage > 3)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@GetPageUrl(1)">
                                    <i class="fas fa-angle-double-left"></i>
                                </a>
                            </li>
                        }

                        <!-- Previous Page -->
                        @if (Model.HasPreviousPage)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@GetPageUrl(Model.CurrentPage - 1)">
                                    <i class="fas fa-angle-left"></i>
                                </a>
                            </li>
                        }

                        <!-- Page Numbers -->
                        @{
                            var startPage = Math.Max(1, Model.CurrentPage - 2);
                            var endPage = Math.Min(Model.TotalPages, Model.CurrentPage + 2);
                        }

                        @for (int i = startPage; i <= endPage; i++)
                        {
                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                <a class="page-link" href="@GetPageUrl(i)">@i</a>
                            </li>
                        }

                        <!-- Next Page -->
                        @if (Model.HasNextPage)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@GetPageUrl(Model.CurrentPage + 1)">
                                    <i class="fas fa-angle-right"></i>
                                </a>
                            </li>
                        }

                        <!-- Last Page -->
                        @if (Model.CurrentPage < Model.TotalPages - 2)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@GetPageUrl(Model.TotalPages)">
                                    <i class="fas fa-angle-double-right"></i>
                                </a>
                            </li>
                        }
                    </ul>
                </nav>
            </div>
        </div>
    }

    <!-- Footer Actions -->
    <div class="row mt-4">
        <div class="col-12">
            <div class="card border-0 bg-light">
                <div class="card-body py-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <strong>Total: @Model.TotalUsers users</strong>
                            <span class="text-muted ms-2">registered</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h5 class="modal-title">
                    <i class="fas fa-exclamation-triangle text-danger me-2"></i>Confirm Deletion
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p class="mb-3">Are you sure you want to delete this user?</p>
                <div class="alert alert-danger">
                    <strong id="userNameToDelete"></strong>
                </div>
                <p class="text-muted small mb-0">
                    <i class="fas fa-info-circle me-1"></i>
                    This action cannot be undone. All user data and related records will be permanently deleted.
                </p>
            </div>
            <div class="modal-footer border-0">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <a id="confirmDeleteBtn" href="#" class="btn btn-danger">
                    <i class="fas fa-trash-alt me-1"></i>Delete User
                </a>
            </div>
        </div>
    </div>
</div>

@{
    string GetPageUrl(int page)
    {
        var routeValues = new Dictionary<string, object>
                {
                    ["page"] = page
                };

        if (!string.IsNullOrWhiteSpace(Model.SearchTerm))
            routeValues["search"] = Model.SearchTerm;

        if (Model.FilterType != "all")
            routeValues["filter"] = Model.FilterType;

        return Url.Action("Index", routeValues);
    }
}

@section Scripts {
    <script>
        $(document).ready(function () {
            // Initialize tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });

            // Add hover effects
            $('.user-card').hover(
                function() {
                    $(this).addClass('shadow-lg').css('transform', 'translateY(-2px)');
                },
                function() {
                    $(this).removeClass('shadow-lg').css('transform', 'none');
                }
            );

            // Auto-submit search form on Enter
            $('#searchInput').on('keypress', function(e) {
                if (e.which === 13) {
                    $('#pageInput').val(1);
                    $('#filterForm').submit();
                }
            });
        });

        // Navigate to details
        function goToDetails(userId) {
            window.location.href = '/AdminUser/Details/' + userId;
        }

        // Delete confirmation function
        function confirmDelete(userId, userName) {
            document.getElementById('userNameToDelete').textContent = userName;
            document.getElementById('confirmDeleteBtn').href = '/AdminUser/Delete/' + userId;
            new bootstrap.Modal(document.getElementById('deleteModal')).show();
        }

        // Filter function
        function setFilter(filterType) {
            $('#filterInput').val(filterType);
            $('#pageInput').val(1);
            $('#filterForm').submit();
        }
    </script>
}

<style>
    .bg-gradient-primary {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    }

    .user-card {
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }

        .user-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15) !important;
        }

    .avatar-container {
        position: relative;
        width: 100%;
        max-width: 120px;
    }

    .user-avatar {
        width: 100%;
        height: 120px;
        object-fit: cover;
        border-radius: 50%;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        transition: transform 0.3s ease;
    }

        .user-avatar:hover {
            transform: scale(1.05);
        }

    .delete-btn {
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .user-card:hover .delete-btn {
        opacity: 1;
    }

    .badge {
        font-size: 0.75rem;
        font-weight: 500;
    }

    .card-title {
        color: #2c3e50;
    }

    .pagination .page-link {
        color: #667eea;
        border-color: #dee2e6;
        padding: 0.5rem 0.75rem;
    }

    .pagination .page-item.active .page-link {
        background-color: #667eea;
        border-color: #667eea;
    }

    .pagination .page-link:hover {
        color: #764ba2;
        background-color: #f8f9fa;
        border-color: #dee2e6;
    }

    @@media (max-width: 768px) {
        .avatar-container

    {
        max-width: 80px;
    }

    .user-avatar {
        height: 80px;
    }

    .delete-btn {
        opacity: 1;
        width: 30px;
        height: 30px;
        top: 5px;
        right: 5px;
    }

    }

    @@media (max-width: 576px) {
        .d-flex.gap-2

    {
        flex-direction: column;
        gap: 0.5rem !important;
    }

    .input-group {
        width: 100% !important;
    }

    }
</style>