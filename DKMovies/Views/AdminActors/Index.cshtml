@using DKMovies.Models.ViewModels
@model ActorIndexViewModel
@{
    ViewData["Title"] = "Actor Management";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<style>
    .bg-gradient-primary {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    }

    .actor-card {
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
        height: 100%;
    }

        .actor-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15) !important;
        }

    .avatar-container {
        position: relative;
        width: 100%;
        height: 250px; /* Fixed height for consistent layout */
        overflow: hidden;
        border-radius: 8px 8px 0 0;
    }

    .actor-avatar {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s ease;
    }

        .actor-avatar:hover {
            transform: scale(1.05);
        }

    .delete-button {
        opacity: 0;
        transition: opacity 0.3s ease;
        position: absolute;
        top: 10px;
        right: 10px;
        z-index: 10;
        width: 36px;
        height: 36px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        border: none;
        background-color: #dc3545;
        color: white;
        box-shadow: 0 2px 8px rgba(220, 53, 69, 0.3);
    }

        .delete-button:hover {
            background-color: #c82333;
            box-shadow: 0 4px 12px rgba(220, 53, 69, 0.4);
        }

    .actor-card:hover .delete-button {
        opacity: 1;
    }

    .actor-details {
        padding: 1rem;
        flex-grow: 1;
        display: flex;
        flex-direction: column;
    }

    .biography-preview {
        font-style: italic;
        font-size: 0.85rem;
        line-height: 1.4;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
        flex-grow: 1;
    }

    .actor-name {
        font-size: 1.1rem;
        font-weight: 600;
        margin-bottom: 0.5rem;
        text-align: center;
    }

    .actor-info {
        text-align: center;
        font-size: 0.85rem;
        margin-bottom: 1rem;
    }

    .actor-stats {
        display: flex;
        justify-content: center;
        gap: 0.5rem;
        margin-top: auto;
        flex-wrap: wrap;
    }

    .stat-badge {
        font-size: 0.75rem;
        padding: 0.25rem 0.5rem;
    }

    .pagination .page-link {
        color: #667eea;
        border-color: #dee2e6;
    }

    .pagination .page-item.active .page-link {
        background-color: #667eea;
        border-color: #667eea;
    }

    .pagination .page-link:hover {
        color: #5a6fd8;
        background-color: #e9ecef;
        border-color: #dee2e6;
    }

    .badge {
        font-size: 0.75em;
    }

    .dropdown-item.active {
        background-color: #667eea;
    }
</style>

<!-- Header Section -->
<div class="row mb-4">
    <div class="col-12">
        <div class="card border-0 bg-gradient-primary text-white shadow-sm">
            <div class="card-body py-4">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h2 class="mb-1 fw-bold">
                            <i class="fas fa-star me-2"></i>Actor Management
                        </h2>
                        <p class="mb-0 opacity-90">Manage movie actors and talent</p>
                    </div>
                    <div class="d-flex gap-2">
                        <a asp-action="Create" class="btn btn-light btn-sm">
                            <i class="fas fa-plus me-1"></i>Add Actor
                        </a>
                        <button class="btn btn-light btn-sm" onclick="location.reload()">
                            <i class="fas fa-sync-alt me-1"></i>Refresh
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@if (!Model.Actors.Any())
{
    <!-- Empty State -->
    <div class="row">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-body text-center py-5">
                    <div class="mb-4">
                        <i class="fas fa-star text-muted" style="font-size: 4rem; opacity: 0.3;"></i>
                    </div>
                    <h4 class="text-muted mb-3">No Actors Found</h4>
                    <p class="text-muted mb-4">
                        No actors match your search criteria. Try adjusting your filters or search term.
                    </p>
                    <div class="d-flex justify-content-center gap-2">
                        <a asp-action="Index" class="btn btn-outline-secondary">
                            <i class="fas fa-times me-2"></i>Clear Filters
                        </a>
                        <a asp-action="Create" class="btn btn-primary">
                            <i class="fas fa-plus me-2"></i>Add First Actor
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <!-- Filter and Search Section -->
    <div class="row mb-3">
        <div class="col-12">
            <form asp-action="Index" method="get" id="filterForm">
                <input type="hidden" name="page" value="1" id="pageInput" />
                <div class="d-flex justify-content-between align-items-center flex-wrap gap-3">
                    <h5 class="mb-0 text-dark">
                        <i class="fas fa-list me-2 text-primary"></i>
                        Actors
                        <span class="badge bg-primary ms-2">@Model.TotalActors</span>
                    </h5>
                    <div class="d-flex gap-2 flex-wrap">
                        <div class="dropdown">
                            <button class="btn btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                                <i class="fas fa-filter me-1"></i>
                                @(Model.FilterType == "all" ? "All Actors" :
                                    Model.FilterType == "recent" ? "Young Actors (Under 30)" :
                                    Model.FilterType == "veteran" ? "Veteran Actors (Over 50)" : "Active Actors")
                            </button>
                            <ul class="dropdown-menu">
                                <li>
                                    <a class="dropdown-item @(Model.FilterType == "all" ? "active" : "")"
                                       href="javascript:void(0)" onclick="setFilter('all')">All Actors</a>
                                </li>
                                <li>
                                    <a class="dropdown-item @(Model.FilterType == "recent" ? "active" : "")"
                                       href="javascript:void(0)" onclick="setFilter('recent')">Young Actors (Under 30)</a>
                                </li>
                                <li>
                                    <a class="dropdown-item @(Model.FilterType == "veteran" ? "active" : "")"
                                       href="javascript:void(0)" onclick="setFilter('veteran')">Veteran Actors (Over 50)</a>
                                </li>
                                <li>
                                    <a class="dropdown-item @(Model.FilterType == "active" ? "active" : "")"
                                       href="javascript:void(0)" onclick="setFilter('active')">Active Actors</a>
                                </li>
                            </ul>
                        </div>
                        <div class="input-group" style="width: 250px;">
                            <input type="text" name="search" class="form-control"
                                   placeholder="Search actors..." value="@Model.SearchTerm" id="searchInput">
                            <button class="btn btn-outline-secondary" type="submit">
                                <i class="fas fa-search"></i>
                            </button>
                        </div>
                        <input type="hidden" name="filter" value="@Model.FilterType" id="filterInput" />
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Results Info -->
    <div class="row mb-3">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <small class="text-muted">
                    Showing @Model.StartItem-@Model.EndItem of @Model.TotalActors actors
                    @if (!string.IsNullOrWhiteSpace(Model.SearchTerm))
                    {
                        <span> for "@Model.SearchTerm"</span>
                    }
                </small>
                @if (!string.IsNullOrWhiteSpace(Model.SearchTerm) || Model.FilterType != "all")
                {
                    <a asp-action="Index" class="btn btn-sm btn-outline-secondary">
                        <i class="fas fa-times me-1"></i>Clear Filters
                    </a>
                }
            </div>
        </div>
    </div>

    <!-- Actors Grid -->
    <!-- Actors Grid - 3 columns -->
    <div class="row" id="actorsContainer">
        @foreach (var actor in Model.Actors)
        {
            <div class="col-lg-4 col-md-6 col-sm-12 mb-4 actor-item">
                <div class="card border-0 shadow-sm actor-card h-100 d-flex flex-column" onclick="goToDetails(@actor.ID)" style="cursor: pointer;">
                    <!-- Delete Button -->
                    <button type="button" class="delete-button" onclick="event.stopPropagation(); confirmDelete(@actor.ID, '@actor.FullName')" data-bs-toggle="tooltip" title="Delete Actor">
                        <i class="fas fa-trash-alt"></i>
                    </button>

                    <!-- Actor Avatar - Takes majority of card -->
                    <div class="avatar-container">
                        @{
                            var avatarPath = string.IsNullOrWhiteSpace(actor.ProfileImagePath) ? "default_person.png" : actor.ProfileImagePath.TrimStart('/');
                            var fullAvatarPath = Url.Content($"~/images/actors/{avatarPath}");
                        }
                        <img src="@fullAvatarPath" class="actor-avatar" onerror="this.onerror=null; this.src='@Url.Content("~/images/default_person.png")'" />
                    </div>

                    <!-- Actor Details - Compact bottom section -->
                    <div class="actor-details">
                        <h5 class="actor-name text-dark">@actor.FullName</h5>

                        <div class="actor-info text-muted">
                            @if (!string.IsNullOrWhiteSpace(actor.PlaceOfBirth))
                            {
                                <div class="mb-1">
                                    <i class="fas fa-map-marker-alt me-1"></i>@actor.PlaceOfBirth
                                </div>
                            }

                            @if (actor.DateOfBirth.HasValue)
                            {
                                <div class="mb-1">
                                    <i class="fas fa-calendar-alt me-1"></i>
                                    Born: @actor.DateOfBirth.Value.ToString("MMM dd, yyyy")
                                </div>
                            }

                            @if (actor.MovieActors?.Any() == true)
                            {
                                <div class="mb-2">
                                    <i class="fas fa-film me-1"></i>@actor.MovieActors.Count() movie@(actor.MovieActors.Count() == 1 ? "" : "s")
                                </div>
                            }
                        </div>

                        <!-- Biography Preview -->
                        @if (!string.IsNullOrWhiteSpace(actor.Biography))
                        {
                            <div class="mb-3">
                                <p class="text-muted mb-0 biography-preview">
                                    <i class="fas fa-quote-left me-1"></i>
                                    @actor.Biography
                                </p>
                            </div>
                        }

                        <!-- Actor Statistics/Badges -->
                        <div class="actor-stats">
                            @if (actor.DateOfBirth.HasValue)
                            {
                                var age = DateTime.Now.Year - actor.DateOfBirth.Value.Year;
                                if (DateTime.Now.DayOfYear < actor.DateOfBirth.Value.DayOfYear)
                                    age--;

                                <span class="badge bg-light text-dark stat-badge">Age: @age</span>

                                @if (age < 30)
                                {
                                    <span class="badge bg-info text-white stat-badge">Young</span>
                                }
                                else if (age > 50)
                                {
                                    <span class="badge bg-warning text-dark stat-badge">Veteran</span>
                                }
                            }

                            @if (actor.MovieActors?.Any() == true)
                            {
                                <span class="badge bg-primary text-white stat-badge">
                                    @actor.MovieActors.Count() Movies
                                </span>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Pagination -->
    @if (Model.TotalPages > 1)
    {
        <div class="row mb-4">
            <div class="col-12">
                <nav aria-label="Actor pagination">
                    <ul class="pagination justify-content-center mb-0">
                        <!-- First Page -->
                        @if (Model.CurrentPage > 3)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@GetPageUrl(1)">
                                    <i class="fas fa-angle-double-left"></i>
                                </a>
                            </li>
                        }

                        <!-- Previous Page -->
                        @if (Model.HasPreviousPage)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@GetPageUrl(Model.CurrentPage - 1)">
                                    <i class="fas fa-angle-left"></i>
                                </a>
                            </li>
                        }

                        <!-- Page Numbers -->
                        @{
                            var startPage = Math.Max(1, Model.CurrentPage - 2);
                            var endPage = Math.Min(Model.TotalPages, Model.CurrentPage + 2);
                        }

                        @for (int i = startPage; i <= endPage; i++)
                        {
                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                <a class="page-link" href="@GetPageUrl(i)">@i</a>
                            </li>
                        }

                        <!-- Next Page -->
                        @if (Model.HasNextPage)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@GetPageUrl(Model.CurrentPage + 1)">
                                    <i class="fas fa-angle-right"></i>
                                </a>
                            </li>
                        }

                        <!-- Last Page -->
                        @if (Model.CurrentPage < Model.TotalPages - 2)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@GetPageUrl(Model.TotalPages)">
                                    <i class="fas fa-angle-double-right"></i>
                                </a>
                            </li>
                        }
                    </ul>
                </nav>
            </div>
        </div>
    }

    <!-- Footer Actions -->
    <div class="row mt-4">
        <div class="col-12">
            <div class="card border-0 bg-light">
                <div class="card-body py-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <strong>Total: @Model.TotalActors actors</strong>
                            <span class="text-muted ms-2">registered</span>
                        </div>
                        <div>
                            <a asp-action="Create" class="btn btn-primary btn-sm">
                                <i class="fas fa-plus me-1"></i>Add New Actor
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h5 class="modal-title">
                    <i class="fas fa-exclamation-triangle text-danger me-2"></i>Confirm Deletion
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p class="mb-3">Are you sure you want to delete this actor?</p>
                <div class="alert alert-danger">
                    <strong id="actorNameToDelete"></strong>
                </div>
                <p class="text-muted small mb-0">
                    <i class="fas fa-info-circle me-1"></i>
                    This action cannot be undone. All actor data and related records will be permanently deleted.
                </p>
            </div>
            <div class="modal-footer border-0">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form id="deleteForm" method="post" style="display: inline;">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">
                        <i class="fas fa-trash-alt me-1"></i>Delete Actor
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@{
    string GetPageUrl(int page)
    {
        var routeValues = new Dictionary<string, object>
                {
                    ["page"] = page
                };

        if (!string.IsNullOrWhiteSpace(Model.SearchTerm))
            routeValues["search"] = Model.SearchTerm;

        if (Model.FilterType != "all")
            routeValues["filter"] = Model.FilterType;

        return Url.Action("Index", routeValues);
    }
}

@section Scripts {
    <script>
        $(document).ready(function () {
            // Initialize tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });

            // Add hover effects
            $('.actor-card').hover(
                function() {
                    $(this).addClass('shadow-lg').css('transform', 'translateY(-2px)');
                    $(this).find('.action-buttons').addClass('show');
                },
                function() {
                    $(this).removeClass('shadow-lg').css('transform', 'none');
                    $(this).find('.action-buttons').removeClass('show');
                }
            );

            // Auto-submit search form on Enter
            $('#searchInput').on('keypress', function(e) {
                if (e.which === 13) {
                    $('#pageInput').val(1);
                    $('#filterForm').submit();
                }
            });
        });

        // Navigate to details
        function goToDetails(actorId) {
            window.location.href = '/AdminActors/Details/' + actorId;
        }

        // Delete confirmation function
        function confirmDelete(actorId, actorName) {
            document.getElementById('actorNameToDelete').textContent = actorName;
            document.getElementById('deleteForm').action = '/AdminActors/Delete/' + actorId;
            new bootstrap.Modal(document.getElementById('deleteModal')).show();
        }

        // Filter function
        function setFilter(filterType) {
            $('#filterInput').val(filterType);
            $('#pageInput').val(1);
            $('#filterForm').submit();
        }
    </script>
}