@using DKMovies.Models.Data.DatabaseModels;
@model User
@{
    ViewData["Title"] = "Profile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />

<style>
    .profile-container {
        background-color: #f8f9fa;
        min-height: 100vh;
        padding: 2rem 0;
    }

    .profile-card {
        background: white;
        border-radius: 12px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        overflow: hidden;
    }

    .profile-header {
        background: #495057;
        color: white;
        padding: 2rem;
        text-align: center;
    }

    .profile-avatar {
        width: 100px;
        height: 100px;
        border-radius: 50%;
        border: 3px solid white;
        object-fit: cover;
        margin-bottom: 1rem;
    }

    .camera-btn {
        position: absolute;
        bottom: 0;
        right: 0;
        width: 32px;
        height: 32px;
        background: white;
        border: 2px solid #007bff;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        color: #007bff;
        font-size: 12px;
        text-decoration: none;
    }

        .camera-btn:hover {
            background: #007bff;
            color: white;
        }

        .camera-btn i {
            pointer-events: none;
        }

    .section-title {
        font-size: 1.1rem;
        font-weight: 600;
        color: #495057;
        margin-bottom: 1rem;
        padding-bottom: 0.5rem;
        border-bottom: 2px solid #e9ecef;
    }

    .form-label {
        font-weight: 500;
        color: #495057;
        margin-bottom: 0.5rem;
    }

    .form-control, .form-select {
        border: 1px solid #ced4da;
        border-radius: 6px;
        padding: 0.75rem;
    }

        .form-control:focus, .form-select:focus {
            border-color: #007bff;
            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
        }

        .form-control:read-only {
            background-color: #e9ecef;
            opacity: 1;
        }

    .security-card {
        background: #f8f9fa;
        border: 1px solid #dee2e6;
        border-radius: 8px;
        padding: 1rem;
    }

    .btn-primary {
        background: #007bff;
        border: 1px solid #007bff;
        padding: 0.75rem 2rem;
        border-radius: 6px;
        font-weight: 500;
    }

        .btn-primary:hover {
            background: #0056b3;
            border-color: #0056b3;
        }

    .btn-secondary {
        background: #6c757d;
        border: 1px solid #6c757d;
        padding: 0.75rem 2rem;
        border-radius: 6px;
        font-weight: 500;
    }

    .toast-container .toast {
        border-radius: 8px;
    }

    .password-strength {
        margin-top: 0.25rem;
    }

    .strength-bar {
        height: 4px;
        background-color: #e9ecef;
        border-radius: 2px;
        overflow: hidden;
    }

    .strength-fill {
        height: 100%;
        width: 0%;
        transition: all 0.3s ease;
        border-radius: 2px;
    }

    .strength-text {
        display: block;
        margin-top: 0.25rem;
    }
</style>

<div class="profile-container">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-8">
                <!-- Form starts here to include the entire card -->
                <form asp-action="Index" asp-controller="UserProfile" method="post" enctype="multipart/form-data">
                    <input type="hidden" asp-for="ID" />

                    <div class="profile-card">
                        <!-- Header -->
                        <div class="profile-header">
                            <div class="position-relative d-inline-block">
                                <img id="imagePreview"
                                     src="~/images/users/@(Model.ProfileImagePath ?? "default.png")"
                                     class="profile-avatar"
                                     alt="Profile Picture" />
                                <label for="profileImageInput" class="camera-btn">
                                    <i class="fas fa-camera"></i>
                                </label>
                                <!-- File input moved inside the form -->
                                <input type="file" id="profileImageInput" name="ProfileImage"
                                       class="d-none" accept="image/*" onchange="previewImage(this)" />
                            </div>
                            <h4 class="mb-1">@(Model.FullName ?? "Your Name")</h4>
                            <p class="mb-0 opacity-75">@@@(Model.Username ?? "username")</p>
                        </div>

                        <!-- Form Content -->
                        <div class="p-4">
                            <!-- Personal Information -->
                            <div class="mb-4">
                                <h5 class="section-title">Personal Information</h5>
                                <div class="row g-3">
                                    <div class="col-md-6">
                                        <label class="form-label">Full Name</label>
                                        <input asp-for="FullName" class="form-control" placeholder="Enter your full name" />
                                        <span asp-validation-for="FullName" class="text-danger small"></span>
                                    </div>
                                    <div class="col-md-6">
                                        <label class="form-label">Username</label>
                                        <input asp-for="Username" class="form-control" readonly />
                                        <span asp-validation-for="Username" class="text-danger small"></span>
                                    </div>
                                    <div class="col-md-6">
                                        <label class="form-label">Birth Date</label>
                                        <input asp-for="BirthDate" type="date" class="form-control" />
                                    </div>
                                    <div class="col-md-6">
                                        <label class="form-label">Gender</label>
                                        <select asp-for="Gender" class="form-select">
                                            <option value="">Select Gender</option>
                                            <option value="Male">Male</option>
                                            <option value="Female">Female</option>
                                            <option value="Other">Other</option>
                                        </select>
                                    </div>
                                </div>
                            </div>

                            <!-- Contact Information -->
                            <div class="mb-4">
                                <h5 class="section-title">Contact Information</h5>
                                <div class="row g-3">
                                    <div class="col-md-6">
                                        <label class="form-label">Email Address</label>
                                        <input asp-for="Email" class="form-control" readonly />
                                        <span asp-validation-for="Email" class="text-danger small"></span>
                                    </div>
                                    <div class="col-md-6">
                                        <label class="form-label">Phone Number</label>
                                        <input asp-for="Phone" class="form-control" placeholder="Enter phone number" />
                                        <span asp-validation-for="Phone" class="text-danger small"></span>
                                    </div>
                                </div>
                            </div>

                            <!-- Security Settings -->
                            <div class="mb-4">
                                <h5 class="section-title">Security Settings</h5>
                                <div class="row g-3">
                                    <div class="col-md-6">
                                        <label class="form-label">Current Password</label>
                                        <input name="CurrentPassword" type="password" class="form-control"
                                               placeholder="Enter current password to change password" />
                                        <span class="text-danger small">@Html.ValidationMessage("CurrentPassword")</span>
                                    </div>

                                    <div class="col-md-6">
                                        <label class="form-label">New Password</label>
                                        <input name="NewPassword" type="password" class="form-control"
                                               placeholder="Enter new password" />
                                        <span class="text-danger small">@Html.ValidationMessage("NewPassword")</span>
                                        <div class="form-text">
                                            Must be 8+ characters with uppercase, lowercase, number, and special character
                                        </div>
                                    </div>

                                    <div class="col-12">
                                        <label class="form-label">Two-Factor Authentication</label>
                                        <div class="security-card">
                                            <div class="form-check form-switch">
                                                <input class="form-check-input" type="checkbox"
                                                       asp-for="TwoFactorEnabled" id="twoFactorSwitch" />
                                                <label class="form-check-label" for="twoFactorSwitch">
                                                    Enable 2FA
                                                </label>
                                            </div>
                                            <small class="text-muted">Extra account security</small>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Action Buttons -->
                            <div class="d-flex gap-3 justify-content-center pt-3 border-top">
                                <button type="submit" class="btn btn-primary">
                                    <i class="fas fa-save me-2"></i>Save Changes
                                </button>
                                <a href="@Url.Action("Index", "UserMovies")" class="btn btn-secondary">
                                    Cancel
                                </a>
                            </div>
                        </div>
                    </div>
                </form>
                <!-- Form ends here -->
            </div>
        </div>
    </div>
</div>

<!-- Toast Notifications -->
@if (!string.IsNullOrEmpty(ViewBag.ToastMessage))
{
    <div class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 1100;">
        <div class="toast show align-items-center text-bg-success border-0" role="alert">
            <div class="d-flex">
                <div class="toast-body">
                    <i class="fas fa-check-circle me-2"></i>@ViewBag.ToastMessage
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto"
                        data-bs-dismiss="toast"></button>
            </div>
        </div>
    </div>
}

@if (!string.IsNullOrEmpty(ViewBag.ToastError))
{
    <div class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 1100;">
        <div class="toast show align-items-center text-bg-danger border-0" role="alert">
            <div class="d-flex">
                <div class="toast-body">
                    <i class="fas fa-exclamation-circle me-2"></i>@ViewBag.ToastError
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto"
                        data-bs-dismiss="toast"></button>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        function previewImage(input) {
            const file = input.files[0];
            const preview = document.getElementById("imagePreview");

            if (file && preview) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    preview.src = e.target.result;
                };
                reader.readAsDataURL(file);
            }
        }

        // Auto-hide toasts after 5 seconds
        document.addEventListener('DOMContentLoaded', function() {
            const toasts = document.querySelectorAll('.toast');
            toasts.forEach(toast => {
                setTimeout(() => {
                    if (bootstrap && bootstrap.Toast) {
                        const bsToast = new bootstrap.Toast(toast);
                        bsToast.hide();
                    }
                }, 5000);
            });
        });


                // Password strength indicator
        document.addEventListener('DOMContentLoaded', function() {
            const newPasswordInput = document.querySelector('input[name="NewPassword"]');

            if (newPasswordInput) {
                // Create strength indicator
                const strengthDiv = document.createElement('div');
                strengthDiv.className = 'password-strength mt-1';
                strengthDiv.innerHTML = `
                    <div class="strength-bar">
                        <div class="strength-fill"></div>
                    </div>
                    <small class="strength-text text-muted">Password strength</small>
                `;
                newPasswordInput.parentNode.insertBefore(strengthDiv, newPasswordInput.nextSibling);

                newPasswordInput.addEventListener('input', function() {
                    const password = this.value;
                    const strength = calculatePasswordStrength(password);
                    updateStrengthIndicator(strength, strengthDiv);
                });
            }
        });

        function calculatePasswordStrength(password) {
            let score = 0;
            let feedback = [];

            if (password.length >= 8) score++;
            else feedback.push('8+ characters');

            if (/[A-Z]/.test(password)) score++;
            else feedback.push('uppercase letter');

            if (/[a-z]/.test(password)) score++;
            else feedback.push('lowercase letter');

            if (/\d/.test(password)) score++;
            else feedback.push('number');

            if (/[^A-Za-z0-9]/.test(password)) score++;
            else feedback.push('special character');

            return { score, feedback };
        }

        function updateStrengthIndicator(strength, container) {
            const fill = container.querySelector('.strength-fill');
            const text = container.querySelector('.strength-text');

            const percentage = (strength.score / 5) * 100;
            fill.style.width = percentage + '%';

            let color = '#dc3545'; // red
            let label = 'Weak';

            if (strength.score >= 5) {
                color = '#198754'; // green
                label = 'Strong';
            } else if (strength.score >= 3) {
                color = '#ffc107'; // yellow
                label = 'Medium';
            }

            fill.style.backgroundColor = color;

            if (strength.feedback.length > 0) {
                text.textContent = `${label} - Missing: ${strength.feedback.join(', ')}`;
                text.className = 'strength-text text-muted small';
            } else {
                text.textContent = `${label} - All requirements met`;
                text.className = 'strength-text text-success small';
            }
        }
    </script>
}