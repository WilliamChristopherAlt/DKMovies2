@model DKMovies.Models.Data.DatabaseModels.Movie
@{
    ViewData["Title"] = "Chi tiết phim";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="mb-4">
    <div class="d-flex align-items-center justify-content-between">
        <div>
            <h2 class="mb-1 fw-bold text-dark">
                <i class="fas fa-info-circle text-primary me-2"></i>Chi tiết phim
            </h2>
            <p class="text-muted mb-0">Thông tin đầy đủ về phim</p>
        </div>
        <div class="d-flex gap-2">
            <a asp-action="Edit" asp-route-id="@Model.ID" class="btn btn-warning btn-sm">
                <i class="fas fa-edit me-1"></i>Chỉnh sửa
            </a>
            <a asp-action="Delete" asp-route-id="@Model.ID" class="btn btn-danger btn-sm"
               onclick="return confirm('Bạn có chắc muốn xóa phim này?');">
                <i class="fas fa-trash-alt me-1"></i>Xóa
            </a>
        </div>
    </div>
</div>

<div class="row g-4">
    <!-- Poster & Thông tin chung -->
    <div class="col-lg-4">
        <div class="card border-0 shadow-sm h-100">
            <div class="position-relative">
                <img src="@(!string.IsNullOrWhiteSpace(Model.PosterImagePath) ? Model.PosterImagePath : "/images/default-poster.jpg")"
                     alt="@Model.Title Poster"
                     class="card-img-top"
                     style="height: 500px; object-fit: cover;"
                     onerror="this.src='/images/default-poster.jpg'" />
                <div class="position-absolute top-0 end-0 m-3">
                    <span class="badge bg-primary px-3 py-2">
                        <i class="fas fa-clock me-1"></i>@Model.DurationMinutes phút
                    </span>
                </div>
            </div>
            <div class="card-body">
                <h5 class="card-title fw-bold mb-3">@Model.Title</h5>

                <div class="mb-3">
                    <h6 class="text-muted mb-2">
                        <i class="fas fa-tags me-2"></i>Thông tin cơ bản
                    </h6>
                    <div class="row g-2">
                        <div class="col-12">
                            <span class="badge bg-light text-dark me-1 mb-1">
                                <i class="fas fa-theater-masks me-1"></i>
                                Thể loại: @GetGenreNames()
                            </span>
                        </div>
                        <div class="col-12">
                            <span class="badge bg-light text-dark me-1 mb-1">
                                <i class="fas fa-calendar-alt me-1"></i>
                                Ngày phát hành: @GetReleaseDate()
                            </span>
                        </div>
                        @if (Model.Rating != null)
                        {
                            <div class="col-12">
                                <span class="badge bg-warning text-dark me-1 mb-1">
                                    <i class="fas fa-star me-1"></i>
                                    Phân loại: @Model.Rating.Value
                                </span>
                            </div>
                        }
                        @if (Model.Language != null)
                        {
                            <div class="col-12">
                                <span class="badge bg-info text-white me-1 mb-1">
                                    <i class="fas fa-language me-1"></i>
                                    Ngôn ngữ: @Model.Language.Name
                                </span>
                            </div>
                        }
                        @if (Model.Country != null)
                        {
                            <div class="col-12">
                                <span class="badge bg-secondary text-white me-1 mb-1">
                                    <i class="fas fa-flag me-1"></i>
                                    Quốc gia: @Model.Country.Name
                                </span>
                            </div>
                        }
                    </div>
                </div>

                @if (Model.Director != null)
                {
                    <div class="mb-3">
                        <h6 class="text-muted mb-2">
                            <i class="fas fa-user-tie me-2"></i>Đạo diễn
                        </h6>
                        <div class="d-flex align-items-center">
                            @if (!string.IsNullOrWhiteSpace(Model.Director.ProfileImagePath))
                            {
                                <img src="@Model.Director.ProfileImagePath" alt="@Model.Director.FullName"
                                     class="rounded-circle me-2" style="width: 40px; height: 40px; object-fit: cover;" />
                            }
                            <div>
                                <div class="fw-medium">@Model.Director.FullName</div>
                                @if (Model.Director.PlaceOfBirth != null)
                                {
                                    <small class="text-muted">@Model.Director.PlaceOfBirth</small>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Mô tả & Trailer -->
    <div class="col-lg-8">
        <div class="card border-0 shadow-sm mb-4">
            <div class="card-header bg-white border-bottom-0 py-3">
                <h5 class="card-title mb-0 fw-semibold">
                    <i class="fas fa-align-left text-info me-2"></i>Mô tả phim
                </h5>
            </div>
            <div class="card-body">
                @if (!string.IsNullOrWhiteSpace(Model.Description))
                {
                    <p class="mb-0 lh-lg">@Model.Description</p>
                }
                else
                {
                    <p class="text-muted mb-0 fst-italic">
                        <i class="fas fa-info-circle me-2"></i>Chưa có mô tả cho phim này.
                    </p>
                }
            </div>
        </div>

        @if (!string.IsNullOrWhiteSpace(Model.TrailerUrl))
        {
            <div class="card border-0 shadow-sm mb-4">
                <div class="card-header bg-white border-bottom-0 py-3">
                    <h5 class="card-title mb-0 fw-semibold">
                        <i class="fas fa-play-circle text-danger me-2"></i>Trailer
                    </h5>
                </div>
                <div class="card-body">
                    <div class="ratio ratio-16x9">
                        <iframe src="@GetEmbedUrl(Model.TrailerUrl)"
                                title="@Model.Title Trailer"
                                allowfullscreen
                                class="rounded"></iframe>
                    </div>
                    <div class="mt-3">
                        <a href="@Model.TrailerUrl" target="_blank" class="btn btn-outline-primary btn-sm">
                            <i class="fas fa-external-link-alt me-1"></i>Xem trên YouTube
                        </a>
                    </div>
                </div>
            </div>
        }

        <!-- Statistics Card -->
        <div class="card border-0 shadow-sm">
            <div class="card-header bg-white border-bottom-0 py-3">
                <h5 class="card-title mb-0 fw-semibold">
                    <i class="fas fa-chart-bar text-success me-2"></i>Thống kê
                </h5>
            </div>
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-md-4">
                        <div class="bg-light rounded p-3 text-center">
                            <i class="fas fa-ticket-alt text-primary fs-3 mb-2"></i>
                            @* <div class="fw-bold">@(Model.ShowTimes?.SelectMany(st => st.Tickets ?? new List<Ticket>()).Count() ?? 0)</div> *@
                            <small class="text-muted">Vé đã bán</small>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="bg-light rounded p-3 text-center">
                            <i class="fas fa-clock text-warning fs-3 mb-2"></i>
                            <div class="fw-bold">@(Model.ShowTimes?.Count() ?? 0)</div>
                            <small class="text-muted">Suất chiếu</small>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="bg-light rounded p-3 text-center">
                            <i class="fas fa-star text-success fs-3 mb-2"></i>
                            <div class="fw-bold">@GetAverageRating()</div>
                            <small class="text-muted">Đánh giá TB</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Action Buttons -->
<div class="row mt-4">
    <div class="col-12">
        <div class="d-flex justify-content-between align-items-center">
            <a asp-action="Index" class="btn btn-outline-secondary">
                <i class="fas fa-arrow-left me-2"></i>Quay lại danh sách
            </a>
            <div class="d-flex gap-2">
                <a asp-controller="AdminShowTime" asp-action="Create" asp-route-movieId="@Model.ID"
                   class="btn btn-success">
                    <i class="fas fa-calendar-plus me-2"></i>Tạo suất chiếu
                </a>
                <a asp-action="Edit" asp-route-id="@Model.ID" class="btn btn-warning">
                    <i class="fas fa-edit me-2"></i>Chỉnh sửa
                </a>
            </div>
        </div>
    </div>
</div>

@functions {
    private string GetGenreNames()
    {
        try
        {
            if (Model.MovieGenres != null && Model.MovieGenres.Any())
            {
                var genres = Model.MovieGenres
                    .Where(mg => mg.Genre != null)
                    .Select(mg => mg.Genre.Name)
                    .Where(name => !string.IsNullOrEmpty(name));

                return genres.Any() ? string.Join(", ", genres) : "Không rõ";
            }

            return "Không rõ";
        }
        catch
        {
            return "Không rõ";
        }
    }

    private string GetReleaseDate()
    {
        try
        {
            if (Model.ReleaseDate.HasValue && Model.ReleaseDate.Value != DateTime.MinValue)
            {
                return Model.ReleaseDate.Value.ToString("dd/MM/yyyy");
            }
            return "Chưa cập nhật";
        }
        catch
        {
            return "Chưa cập nhật";
        }
    }

    private string GetEmbedUrl(string youtubeUrl)
    {
        try
        {
            if (string.IsNullOrWhiteSpace(youtubeUrl))
                return "";

            if (youtubeUrl.Contains("watch?v="))
            {
                return youtubeUrl.Replace("watch?v=", "embed/");
            }
            else if (youtubeUrl.Contains("youtu.be/"))
            {
                var videoId = youtubeUrl.Split('/').Last();
                return $"https://www.youtube.com/embed/{videoId}";
            }

            return youtubeUrl;
        }
        catch
        {
            return "";
        }
    }

    private string GetAverageRating()
    {
        try
        {
            if (Model.Reviews != null && Model.Reviews.Any())
            {
                var avgRating = Model.Reviews.Average(r => r.Rating);
                return avgRating.ToString("F1") + "/5";
            }
            return "Chưa có";
        }
        catch
        {
            return "Chưa có";
        }
    }
}

<style>
    .card {
        transition: all 0.3s ease;
    }

        .card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.1) !important;
        }

    .badge {
        font-size: 0.875rem;
    }

    .ratio iframe {
        border: none;
    }

    .bg-light:hover {
        background-color: #e9ecef !important;
        transform: translateY(-1px);
        transition: all 0.3s ease;
    }


    {
        margin-bottom: 1rem;
    }

    .d-flex.justify-content-between {
        flex-direction: column;
        gap: 1rem;
    }

        .d-flex.justify-content-between .d-flex {
            justify-content: center;
        }

    }
</style>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Add loading state to buttons
            document.querySelectorAll('.btn').forEach(btn => {
                btn.addEventListener('click', function(e) {
                    if (this.href && !this.href.includes('#')) {
                        this.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Đang tải...';
                        this.disabled = true;
                    }
                });
            });

            // Handle image loading errors
            document.querySelectorAll('img').forEach(img => {
                img.addEventListener('error', function() {
                    this.src = '/images/default-poster.jpg';
                    this.alt = 'Poster không khả dụng';
                });
            });
        });
    </script>
}